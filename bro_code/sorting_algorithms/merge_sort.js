// space complexity - O(n)
// runtime complexity O(n*logn)
// ამ ალგორითმის დროს პირველ რიგში მასივი იშლება სხვა პატარა მასივებად სანამ თითოეულ მასივში არ იარსებებს მხოლოდ ერთი ელემენტი


function merge() {
	
}


/*
1) მასივის დაშლა
				 [3, 7, 8, 5, 4, 2, 6, 1]
			[3, 7, 8, 5]		 [4, 2, 6, 1]
		 [3, 7]	   [8, 5]	  	[4, 2]   [6, 1]
	   [3] [7]     [8] [5]	   [4] [2]   [6] [1]

2) merge, ამ დაშლილი მასივების თითოეული ელემენტი დარდება ერთმანეთს და ისე იქმნება ახალი მასივი
	1) 3 & 7 --> [3, 7]   
	2) 8 & 5 --> [5, 8]
	[3, 7] & [5, 8]
	3) 3 & 5 --> [3, , ,]
	4) 7 & 5 --> [3, 5, ,]
	5) 7 & 8 --> [3, 5, 7, 8]
	......
			 	[1, 2, 3, 4, 5, 6, 7, 8]
			[3, 5, 7, 8]		 [1, 2, 4, 6]
		 [3, 7]	   [5, 8]	  	[2, 4]   [1, 6]
	   [3] [7]     [8] [5]	   [4] [2]   [6] [1]
*/